// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vinodrill_Back.Models.EntityFramework;

#nullable disable

namespace Vinodrill_Back.Migrations
{
    [DbContext(typeof(VinodrillDBContext))]
    partial class VinodrillDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Activite", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdActivite"));

                    b.Property<string>("CpRdv")
                        .IsRequired()
                        .HasColumnType("char(5)")
                        .HasColumnName("act_cprdv");

                    b.Property<string>("DescriptionActivite")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("act_description");

                    b.Property<TimeOnly>("HoraireActivite")
                        .HasColumnType("time without time zone")
                        .HasColumnName("act_horaire");

                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("prt_id");

                    b.Property<string>("LibelleActivite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("act_libelle");

                    b.Property<string>("RueRdv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("act_ruerdv");

                    b.Property<string>("VilleRdv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("act_villerdv");

                    b.HasKey("IdActivite");

                    b.HasIndex("IdPartenaire");

                    b.ToTable("t_e_activite_act");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("IdAdresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAdresse"));

                    b.Property<string>("CodePostalAdresse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adr_cp");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_idclient");

                    b.Property<string>("LibelleAdresse")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("adr_libelle");

                    b.Property<string>("PaysAdresse")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("adr_pays");

                    b.Property<string>("RueAdresse")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("adr_rueadresse");

                    b.Property<string>("VilleAdresse")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("adr_ville");

                    b.HasKey("IdAdresse");

                    b.HasIndex("IdClient");

                    b.ToTable("t_e_adresse_adr");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Avis", b =>
                {
                    b.Property<int>("IdAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAvis"));

                    b.Property<bool>("AvisSignale")
                        .HasColumnType("boolean")
                        .HasColumnName("avi_avissignale");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avi_commentaire");

                    b.Property<DateTime>("DateAvis")
                        .HasColumnType("date")
                        .HasColumnName("avi_dateavis");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("clt_id")
                        .HasColumnOrder(0);

                    b.Property<int>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id")
                        .HasColumnOrder(1);

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("avi_note");

                    b.Property<string>("TitreAvis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("avi_titreavis");

                    b.Property<string>("TypeSignalement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("avi_typesignalement");

                    b.HasKey("IdAvis");

                    b.HasIndex("IdClient");

                    b.ToTable("t_e_avis_avi");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.BonCommande", b =>
                {
                    b.Property<int>("IdBonCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("bcm_id");

                    b.Property<string>("CodeBonCommande")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("bcm_codeboncommande");

                    b.Property<DateTime>("DateValidite")
                        .HasColumnType("date")
                        .HasColumnName("bcm_datevalidite");

                    b.Property<bool>("EstValide")
                        .HasColumnType("boolean")
                        .HasColumnName("bcm_estvalide");

                    b.Property<int>("RefCommande")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.HasKey("IdBonCommande");

                    b.ToTable("t_e_boncommande_bcm");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.BonReduction", b =>
                {
                    b.Property<int>("IdBonReduction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("brd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdBonReduction"));

                    b.Property<string>("CodeBonReduction")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("brd_codebonreduction");

                    b.Property<DateTime>("DateValidite")
                        .HasColumnType("date")
                        .HasColumnName("brd_datevalidite");

                    b.Property<bool>("EstValide")
                        .HasColumnType("boolean")
                        .HasColumnName("brd_estvalide");

                    b.Property<int>("RefCommande")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    b.HasKey("IdBonReduction");

                    b.HasIndex("RefCommande");

                    b.ToTable("t_e_bonreduction_brd");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.CatParticipant", b =>
                {
                    b.Property<int>("IdCategorieParticipant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cppt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCategorieParticipant"));

                    b.Property<string>("NomCategorieParticipant")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cppt_nom");

                    b.HasKey("IdCategorieParticipant");

                    b.ToTable("t_e_catparticipant_cppt");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Cb", b =>
                {
                    b.Property<int>("IdCb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cb_idcb");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCb"));

                    b.Property<string>("AnneeExpCb")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cb_anneeexp");

                    b.Property<string>("CodeCb")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cb_code");

                    b.Property<string>("CvcCb")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cb_cvc");

                    b.Property<string>("MoisExpCb")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("cb_moisexp");

                    b.HasKey("IdCb");

                    b.ToTable("t_e_cb_cb");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdClient"));

                    b.Property<DateTime>("DateNaissanceClient")
                        .HasColumnType("date")
                        .HasColumnName("clt_datenaissance");

                    b.Property<string>("EmailClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("clt_email");

                    b.Property<int>("IdAvisClient")
                        .HasColumnType("integer")
                        .HasColumnName("avi_idavis")
                        .HasColumnOrder(0);

                    b.Property<int>("IdCbClient")
                        .HasColumnType("integer")
                        .HasColumnName("cb_idcb")
                        .HasColumnOrder(1);

                    b.Property<string>("MotDePasseClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("clt_motdepasse");

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("clt_nom");

                    b.Property<string>("PrenomClient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("clt_prenom");

                    b.Property<string>("SexeClient")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clt_sexe");

                    b.HasKey("IdClient");

                    b.HasIndex("EmailClient")
                        .IsUnique()
                        .HasDatabaseName("uq_clt_email");

                    b.HasIndex("IdCbClient");

                    b.ToTable("t_e_client_clt");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("RefCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RefCommande"));

                    b.Property<string>("CheminFacture")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cmd_cheminfacture");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("date")
                        .HasColumnName("cmd_datecommande");

                    b.Property<bool>("EstCheque")
                        .HasColumnType("boolean")
                        .HasColumnName("cmd_estcheque");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idclient")
                        .HasColumnOrder(0);

                    b.Property<int>("IdPaiement")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idpaiement")
                        .HasColumnOrder(1);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cmd_message");

                    b.Property<decimal>("PrixCommande")
                        .HasColumnType("numeric")
                        .HasColumnName("cmd_prixcommande");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_quantite");

                    b.HasKey("RefCommande");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdPaiement");

                    b.ToTable("t_e_commande_cmd");

                    b.HasCheckConstraint("ck_cmd_prix", "cmd_quantite > 0");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Destination", b =>
                {
                    b.Property<int>("IdDestination")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dst_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdDestination"));

                    b.Property<string>("DescriptionDestination")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dst_description");

                    b.Property<string>("LibelleDestination")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("dst_libelle");

                    b.HasKey("IdDestination")
                        .HasName("pk_destination");

                    b.ToTable("t_e_destination_dst");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Effectue", b =>
                {
                    b.Property<int>("IdActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("act_id")
                        .HasColumnOrder(0);

                    b.Property<int>("IdEtape")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("etp_id")
                        .HasColumnOrder(1);

                    b.HasKey("IdActivite", "IdEtape")
                        .HasName("pk_effectue");

                    b.HasIndex("IdEtape");

                    b.ToTable("t_j_effectue_efc");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Etape", b =>
                {
                    b.Property<int>("IdEtape")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("etp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdEtape"));

                    b.Property<string>("DescriptionEtape")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("etp_description");

                    b.Property<int>("IdHebergement")
                        .HasColumnType("integer")
                        .HasColumnName("hbg_id")
                        .HasColumnOrder(1);

                    b.Property<int>("IdSejour")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id")
                        .HasColumnOrder(0);

                    b.Property<string>("PhotoEtape")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("etp_photo");

                    b.Property<string>("TitreEtape")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("etp_titre");

                    b.Property<string>("UrlEtape")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("etp_url");

                    b.Property<string>("VideoEtape")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("etp_video");

                    b.HasKey("IdEtape");

                    b.HasIndex("IdHebergement");

                    b.HasIndex("IdSejour");

                    b.ToTable("t_e_etape_etp");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.EtoileHotel", b =>
                {
                    b.Property<int>("NbEtoileHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("eth_nb");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NbEtoileHotel"));

                    b.HasKey("NbEtoileHotel");

                    b.ToTable("t_e_etoilehotel_eth");

                    b.HasCheckConstraint("ck_eth_nb", "eth_nb between 0 and 5");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.EtoileRestaurant", b =>
                {
                    b.Property<int>("NbEtoileRestaurant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("etr_nb");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NbEtoileRestaurant"));

                    b.HasKey("NbEtoileRestaurant");

                    b.ToTable("t_e_etoilerestaurant_etr");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.FaitPartieDe", b =>
                {
                    b.Property<int>("IdVisite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vst_id")
                        .HasColumnOrder(0);

                    b.Property<int>("IdEtape")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("etp_id")
                        .HasColumnOrder(1);

                    b.HasKey("IdVisite", "IdEtape")
                        .HasName("pk_fait_parti_de");

                    b.HasIndex("IdEtape");

                    b.ToTable("t_j_faitpartiede_fpd");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Hebergement", b =>
                {
                    b.Property<int>("IdHebergement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hbg_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdHebergement"));

                    b.Property<string>("DescriptionHebergement")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hbg_description");

                    b.Property<TimeOnly>("HoraireHebergement")
                        .HasMaxLength(255)
                        .HasColumnType("time without time zone")
                        .HasColumnName("hbg_horaire");

                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("prt_id");

                    b.Property<string>("LibelleHebergement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("hbg_libelle");

                    b.Property<int>("NbChambre")
                        .HasColumnType("integer")
                        .HasColumnName("hbg_nbchambre");

                    b.HasKey("IdHebergement");

                    b.HasIndex("IdPartenaire");

                    b.ToTable("t_e_hebergement_hbg");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Image", b =>
                {
                    b.Property<int>("IdImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("img_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdImage"));

                    b.Property<string>("LienImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("img_libelle");

                    b.HasKey("IdImage");

                    b.ToTable("t_e_image_img");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.ImageAvis", b =>
                {
                    b.Property<int>("IdImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("im_id")
                        .HasColumnOrder(1);

                    b.Property<int>("IdAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avi_id")
                        .HasColumnOrder(0);

                    b.HasKey("IdImage", "IdAvis")
                        .HasName("pk_image_avis");

                    b.HasIndex("IdAvis");

                    b.ToTable("t_j_imageavis_ima");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Paiement", b =>
                {
                    b.Property<int>("IdPaiement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pmt_idpmt");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPaiement"));

                    b.Property<int>("IdClientPaiement")
                        .HasColumnType("integer")
                        .HasColumnName("clt_idclient");

                    b.Property<string>("LibellePaiement")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("pmt_libelle");

                    b.Property<bool>("PreferencePaiement")
                        .HasColumnType("boolean")
                        .HasColumnName("pmt_preference");

                    b.HasKey("IdPaiement");

                    b.HasIndex("IdClientPaiement");

                    b.ToTable("t_e_paiement_pmt");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Partenaire", b =>
                {
                    b.Property<int>("IdPartenaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPartenaire"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("char(10)")
                        .HasColumnName("prt_contact");

                    b.Property<string>("CpPartenaire")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("prt_cp");

                    b.Property<string>("DetailPartenaire")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prt_detailpartenaire");

                    b.Property<string>("EmailPartenaire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("prt_email");

                    b.Property<string>("NomPartenaire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("prt_nom");

                    b.Property<string>("PhotoPartenaire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("prt_photo");

                    b.Property<string>("RuePartenaire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("prt_rue");

                    b.Property<string>("VillePartenaire")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("prt_ville");

                    b.HasKey("IdPartenaire");

                    b.ToTable("t_e_partenaire_prt");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Participe", b =>
                {
                    b.Property<int>("IdCategorieParticipant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpt_id")
                        .HasColumnOrder(0);

                    b.Property<int>("IdSejour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id")
                        .HasColumnOrder(1);

                    b.HasKey("IdCategorieParticipant", "IdSejour")
                        .HasName("pk_participe");

                    b.HasIndex("IdSejour");

                    b.ToTable("t_j_participe_ppt");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.ReponseAvis", b =>
                {
                    b.Property<int>("IdReponseAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rav_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdReponseAvis"));

                    b.Property<int>("IdAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rav_idavis");

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rav_commentaire");

                    b.HasKey("IdReponseAvis", "IdAvis")
                        .HasName("pk_reponse_avis");

                    b.HasIndex("IdAvis");

                    b.ToTable("t_e_reponseavis_rav");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Reservation", b =>
                {
                    b.Property<int>("IdSejour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id")
                        .HasColumnOrder(1);

                    b.Property<int>("RefCommande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("DateDebutReservation")
                        .HasColumnType("date")
                        .HasColumnName("rsv_datedebutreservation");

                    b.Property<bool>("EstCadeau")
                        .HasColumnType("boolean")
                        .HasColumnName("rsv_estcadeau");

                    b.Property<int>("NbAdulte")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_nbadulte");

                    b.Property<int>("NbChambre")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_nbchambre");

                    b.Property<int>("NbEnfant")
                        .HasColumnType("integer")
                        .HasColumnName("rsv_nbenfant");

                    b.HasKey("IdSejour", "RefCommande")
                        .HasName("pk_reservation");

                    b.HasIndex("RefCommande");

                    b.ToTable("t_j_reservation_rsv");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Sejour", b =>
                {
                    b.Property<int>("IdSejour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sjr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSejour"));

                    b.Property<string>("DescriptionSejour")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sjr_description");

                    b.Property<int>("IdDestination")
                        .HasColumnType("integer")
                        .HasColumnName("dst_id")
                        .HasColumnOrder(1);

                    b.Property<int>("IdTheme")
                        .HasColumnType("integer")
                        .HasColumnName("thm_id")
                        .HasColumnOrder(0);

                    b.Property<string>("LibelleTemps")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sjr_libelletemps");

                    b.Property<int>("NbJour")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_nbjour");

                    b.Property<int>("NbNuit")
                        .HasColumnType("integer")
                        .HasColumnName("sjr_nbnuit");

                    b.Property<decimal>("NoteMoyenne")
                        .HasColumnType("numeric")
                        .HasColumnName("sjr_notemoyenne");

                    b.Property<string>("PhotoSejour")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sjr_photo");

                    b.Property<decimal>("PrixSejour")
                        .HasColumnType("numeric")
                        .HasColumnName("sjr_prix");

                    b.Property<string>("TitreSejour")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("sjr_titre");

                    b.HasKey("IdSejour");

                    b.HasIndex("IdDestination");

                    b.HasIndex("IdTheme");

                    b.ToTable("t_e_sejour_sjr");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Theme", b =>
                {
                    b.Property<int>("IdTheme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("thm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTheme"));

                    b.Property<string>("ContenuThemePage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("thm_contenuthemepage");

                    b.Property<string>("ImgThemePage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("thm_imgthemepage");

                    b.Property<string>("LibelleTheme")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("thm_libelle");

                    b.HasKey("IdTheme");

                    b.ToTable("t_e_theme_thm");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.TypeActivite", b =>
                {
                    b.Property<int>("IdTypeActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tac_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeActivite"));

                    b.Property<string>("LibelleType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("tac_libelletype");

                    b.HasKey("IdTypeActivite");

                    b.ToTable("t_e_typeactivite_tac");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.TypeCuisine", b =>
                {
                    b.Property<int>("IdTypeCuisine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tcu_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeCuisine"));

                    b.Property<string>("LibelleTypeCuisine")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tcu_libelle");

                    b.HasKey("IdTypeCuisine");

                    b.ToTable("t_e_type_cuisine_tcu");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.TypeVisite", b =>
                {
                    b.Property<int>("IdTypeVisite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tvs_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdTypeVisite"));

                    b.Property<string>("LibelleTypeVisite")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("tvs_libelle");

                    b.HasKey("IdTypeVisite");

                    b.ToTable("t_e_typevisite_tvs");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Visite", b =>
                {
                    b.Property<int>("IdVisite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vst_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdVisite"));

                    b.Property<string>("DescriptionVisite")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vst_description");

                    b.Property<TimeOnly>("HoraireVisite")
                        .HasColumnType("time without time zone")
                        .HasColumnName("vst_horaire");

                    b.Property<int>("IdPartenaire")
                        .HasColumnType("integer")
                        .HasColumnName("cav_id")
                        .HasColumnOrder(1);

                    b.Property<int>("IdTypeVisite")
                        .HasColumnType("integer")
                        .HasColumnName("tvs_id")
                        .HasColumnOrder(0);

                    b.Property<string>("LibelleVisite")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("vst_libelle");

                    b.HasKey("IdVisite");

                    b.HasIndex("IdPartenaire");

                    b.HasIndex("IdTypeVisite");

                    b.ToTable("t_e_visite_vst");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Cave", b =>
                {
                    b.HasBaseType("Vinodrill_Back.Models.EntityFramework.Partenaire");

                    b.ToTable("t_h_cave_cav");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Hotel", b =>
                {
                    b.HasBaseType("Vinodrill_Back.Models.EntityFramework.Partenaire");

                    b.Property<int>("NbEtoileHotel")
                        .HasColumnType("integer")
                        .HasColumnName("ect_nb")
                        .HasColumnOrder(0);

                    b.HasIndex("NbEtoileHotel");

                    b.ToTable("t_h_hotel_htl");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Restaurant", b =>
                {
                    b.HasBaseType("Vinodrill_Back.Models.EntityFramework.Partenaire");

                    b.Property<int>("IdTypeCuisineCuisine")
                        .HasColumnType("integer")
                        .HasColumnName("tcu_id");

                    b.Property<int>("NbEtoileRestaurantRestaurant")
                        .HasColumnType("integer")
                        .HasColumnName("etr_nb");

                    b.Property<string>("SpecialiteRestaurant")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("res_specialite");

                    b.HasIndex("IdTypeCuisineCuisine");

                    b.HasIndex("NbEtoileRestaurantRestaurant");

                    b.ToTable("t_e_restaurant_res");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Societe", b =>
                {
                    b.HasBaseType("Vinodrill_Back.Models.EntityFramework.Partenaire");

                    b.Property<int>("IdTypeActivite")
                        .HasColumnType("integer")
                        .HasColumnName("tac_id")
                        .HasColumnOrder(0);

                    b.HasIndex("IdTypeActivite");

                    b.ToTable("t_h_societe_sct");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Activite", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Societe", "SocieteActiviteNavigation")
                        .WithMany("ActiviteSocieteNavigation")
                        .HasForeignKey("IdPartenaire")
                        .IsRequired()
                        .HasConstraintName("fk_prt_act");

                    b.Navigation("SocieteActiviteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Client", "ClientAdresseNavigation")
                        .WithMany("AdresseClientNavigation")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_clt_adr");

                    b.Navigation("ClientAdresseNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Avis", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Client", "ClientAvisNavigation")
                        .WithMany("AvisClientNavigation")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_clt_avi");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Sejour", "SejourAvisNavigation")
                        .WithMany("AvisSejourNavigation")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_sej_avi");

                    b.Navigation("ClientAvisNavigation");

                    b.Navigation("SejourAvisNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.BonCommande", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Commande", "CommandeBonCommandeNavigation")
                        .WithMany("BonCommandeCommandeNavigation")
                        .HasForeignKey("IdBonCommande")
                        .IsRequired()
                        .HasConstraintName("fk_cmd_bcm");

                    b.Navigation("CommandeBonCommandeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.BonReduction", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Commande", "CommandeBonReductionNavigation")
                        .WithMany("BonReductionCommandeNavigation")
                        .HasForeignKey("RefCommande")
                        .IsRequired()
                        .HasConstraintName("fk_cmd_brd");

                    b.Navigation("CommandeBonReductionNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Client", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Cb", "CbClientNavigation")
                        .WithMany("ClientCbNavigation")
                        .HasForeignKey("IdCbClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CbClientNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Client", "ClientCommandeNavigation")
                        .WithMany("CommandeClientNavigation")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_clt_cmd");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Paiement", "PaiementCommandeNavigation")
                        .WithMany("CommandePaiementNavigation")
                        .HasForeignKey("IdPaiement")
                        .IsRequired()
                        .HasConstraintName("fk_pmt_cmd");

                    b.Navigation("ClientCommandeNavigation");

                    b.Navigation("PaiementCommandeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Effectue", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Activite", "ActiviteEffectueNavigation")
                        .WithMany("EffectueActiviteNavigation")
                        .HasForeignKey("IdActivite")
                        .IsRequired()
                        .HasConstraintName("fk_vst_efc");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Etape", "EtapeEffectueNavigation")
                        .WithMany("EffectueEtapeNavigation")
                        .HasForeignKey("IdEtape")
                        .IsRequired()
                        .HasConstraintName("fk_etp_efc");

                    b.Navigation("ActiviteEffectueNavigation");

                    b.Navigation("EtapeEffectueNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Etape", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Hebergement", "HebergementEtapeNavigation")
                        .WithMany("EtapeHebergementNavigation")
                        .HasForeignKey("IdHebergement")
                        .IsRequired()
                        .HasConstraintName("fk_hbg_etp");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Sejour", "SejourEtapeNavigation")
                        .WithMany("EtapeSejourNavigation")
                        .HasForeignKey("IdSejour")
                        .IsRequired()
                        .HasConstraintName("fk_sje_etp");

                    b.Navigation("HebergementEtapeNavigation");

                    b.Navigation("SejourEtapeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.FaitPartieDe", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Etape", "EtapeFaitPartieDeNavigation")
                        .WithMany("FaitPartieDeEtapeNavigation")
                        .HasForeignKey("IdEtape")
                        .IsRequired()
                        .HasConstraintName("fk_etp_fpd");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Visite", "VisiteFaitPartieDeNavigation")
                        .WithMany("FaitPartieDeVisiteNavigation")
                        .HasForeignKey("IdVisite")
                        .IsRequired()
                        .HasConstraintName("fk_vst_fpd");

                    b.Navigation("EtapeFaitPartieDeNavigation");

                    b.Navigation("VisiteFaitPartieDeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Hebergement", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Hotel", "HotelHebergementNavigation")
                        .WithMany("HebergementHotelNavigation")
                        .HasForeignKey("IdPartenaire")
                        .IsRequired()
                        .HasConstraintName("fk_prt_hbg");

                    b.Navigation("HotelHebergementNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.ImageAvis", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Avis", "AvisImageAvisNavigation")
                        .WithMany("ImageAvisAvisNavigation")
                        .HasForeignKey("IdAvis")
                        .IsRequired()
                        .HasConstraintName("fk_avi_ima");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Image", "ImageImageAvisNavigation")
                        .WithMany("ImageAvisImageNavigation")
                        .HasForeignKey("IdImage")
                        .IsRequired()
                        .HasConstraintName("fk_img_ima");

                    b.Navigation("AvisImageAvisNavigation");

                    b.Navigation("ImageImageAvisNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Paiement", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Client", "ClientPaiementNavigation")
                        .WithMany("PaiementClientNavigation")
                        .HasForeignKey("IdClientPaiement")
                        .IsRequired()
                        .HasConstraintName("fk_clt_pmt");

                    b.Navigation("ClientPaiementNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Participe", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.CatParticipant", "CatParticipantParticipeNavigation")
                        .WithMany("ParticipeCatParticipantNavigation")
                        .HasForeignKey("IdCategorieParticipant")
                        .IsRequired()
                        .HasConstraintName("fk_cpt_ppt");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Sejour", "SejourParticipeNavigation")
                        .WithMany("ParticipeSejourNavigation")
                        .HasForeignKey("IdSejour")
                        .IsRequired()
                        .HasConstraintName("fk_sjr_ppt");

                    b.Navigation("CatParticipantParticipeNavigation");

                    b.Navigation("SejourParticipeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.ReponseAvis", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Avis", "AvisReponseAvisNavigation")
                        .WithMany("ReponseAvisAvisNavigation")
                        .HasForeignKey("IdAvis")
                        .IsRequired()
                        .HasConstraintName("fk_avi_rav");

                    b.Navigation("AvisReponseAvisNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Reservation", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Sejour", "SejourReservationNavigation")
                        .WithMany("ReservationSejourNavigation")
                        .HasForeignKey("IdSejour")
                        .IsRequired()
                        .HasConstraintName("fk_sjr_rsv");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Commande", "CommandeReservationNavigation")
                        .WithMany("ReservationCommandeNavigation")
                        .HasForeignKey("RefCommande")
                        .IsRequired()
                        .HasConstraintName("fk_cmd_rsv");

                    b.Navigation("CommandeReservationNavigation");

                    b.Navigation("SejourReservationNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Sejour", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Destination", "DestinationSejourNavigation")
                        .WithMany("SejourDestinationNavigation")
                        .HasForeignKey("IdDestination")
                        .IsRequired()
                        .HasConstraintName("fk_dst_sjr");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Theme", "ThemeSejourNavigation")
                        .WithMany("SejourThemeNavigation")
                        .HasForeignKey("IdTheme")
                        .IsRequired()
                        .HasConstraintName("fk_thm_sjr");

                    b.Navigation("DestinationSejourNavigation");

                    b.Navigation("ThemeSejourNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Visite", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Cave", "CaveVisiteNavigation")
                        .WithMany("VisiteCaveNavigation")
                        .HasForeignKey("IdPartenaire")
                        .IsRequired()
                        .HasConstraintName("fk_cav_vst");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.TypeVisite", "TypeVisiteVisiteNavigation")
                        .WithMany("VisiteTypeVisiteNavigation")
                        .HasForeignKey("IdTypeVisite")
                        .IsRequired()
                        .HasConstraintName("fk_tvs_vst");

                    b.Navigation("CaveVisiteNavigation");

                    b.Navigation("TypeVisiteVisiteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Cave", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Partenaire", "PartenaireCaveNavigation")
                        .WithMany("CavePartenaireNavigation")
                        .HasForeignKey("IdPartenaire")
                        .IsRequired()
                        .HasConstraintName("fk_prt_cav");

                    b.Navigation("PartenaireCaveNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Hotel", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Partenaire", "PartenaireHotelNavigation")
                        .WithMany("HotelPartenaireNavigation")
                        .HasForeignKey("IdPartenaire")
                        .IsRequired()
                        .HasConstraintName("fk_prt_htl");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.EtoileHotel", "EtoileHotelHotelNavigation")
                        .WithMany("HotelEtoileHotelNavigation")
                        .HasForeignKey("NbEtoileHotel")
                        .IsRequired()
                        .HasConstraintName("fk_eth_htl");

                    b.Navigation("EtoileHotelHotelNavigation");

                    b.Navigation("PartenaireHotelNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Restaurant", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Partenaire", null)
                        .WithOne()
                        .HasForeignKey("Vinodrill_Back.Models.EntityFramework.Restaurant", "IdPartenaire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.TypeCuisine", "TypeCuisineCuisineNavigation")
                        .WithMany("RestaurantTypeCuisineCuisineNavigation")
                        .HasForeignKey("IdTypeCuisineCuisine")
                        .IsRequired()
                        .HasConstraintName("fk_tcu_res");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.EtoileRestaurant", "EtoileRestaurantRestaurantNavigation")
                        .WithMany("RestaurantEtoileRestaurantRestaurantNavigation")
                        .HasForeignKey("NbEtoileRestaurantRestaurant")
                        .IsRequired()
                        .HasConstraintName("fk_etr_res");

                    b.Navigation("EtoileRestaurantRestaurantNavigation");

                    b.Navigation("TypeCuisineCuisineNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Societe", b =>
                {
                    b.HasOne("Vinodrill_Back.Models.EntityFramework.Partenaire", "PartenaireSocieteNavigation")
                        .WithMany("SocietePartenaireNavigation")
                        .HasForeignKey("IdPartenaire")
                        .IsRequired()
                        .HasConstraintName("fk_prt_sct");

                    b.HasOne("Vinodrill_Back.Models.EntityFramework.TypeActivite", "TypeActiviteSocieteNavigation")
                        .WithMany("SocieteTypeActiviteNavigation")
                        .HasForeignKey("IdTypeActivite")
                        .IsRequired()
                        .HasConstraintName("fk_tac_sct");

                    b.Navigation("PartenaireSocieteNavigation");

                    b.Navigation("TypeActiviteSocieteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Activite", b =>
                {
                    b.Navigation("EffectueActiviteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Avis", b =>
                {
                    b.Navigation("ImageAvisAvisNavigation");

                    b.Navigation("ReponseAvisAvisNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.CatParticipant", b =>
                {
                    b.Navigation("ParticipeCatParticipantNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Cb", b =>
                {
                    b.Navigation("ClientCbNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("AdresseClientNavigation");

                    b.Navigation("AvisClientNavigation");

                    b.Navigation("CommandeClientNavigation");

                    b.Navigation("PaiementClientNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("BonCommandeCommandeNavigation");

                    b.Navigation("BonReductionCommandeNavigation");

                    b.Navigation("ReservationCommandeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Destination", b =>
                {
                    b.Navigation("SejourDestinationNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Etape", b =>
                {
                    b.Navigation("EffectueEtapeNavigation");

                    b.Navigation("FaitPartieDeEtapeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.EtoileHotel", b =>
                {
                    b.Navigation("HotelEtoileHotelNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.EtoileRestaurant", b =>
                {
                    b.Navigation("RestaurantEtoileRestaurantRestaurantNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Hebergement", b =>
                {
                    b.Navigation("EtapeHebergementNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Image", b =>
                {
                    b.Navigation("ImageAvisImageNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Paiement", b =>
                {
                    b.Navigation("CommandePaiementNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Partenaire", b =>
                {
                    b.Navigation("CavePartenaireNavigation");

                    b.Navigation("HotelPartenaireNavigation");

                    b.Navigation("SocietePartenaireNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Sejour", b =>
                {
                    b.Navigation("AvisSejourNavigation");

                    b.Navigation("EtapeSejourNavigation");

                    b.Navigation("ParticipeSejourNavigation");

                    b.Navigation("ReservationSejourNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Theme", b =>
                {
                    b.Navigation("SejourThemeNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.TypeActivite", b =>
                {
                    b.Navigation("SocieteTypeActiviteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.TypeCuisine", b =>
                {
                    b.Navigation("RestaurantTypeCuisineCuisineNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.TypeVisite", b =>
                {
                    b.Navigation("VisiteTypeVisiteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Visite", b =>
                {
                    b.Navigation("FaitPartieDeVisiteNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Cave", b =>
                {
                    b.Navigation("VisiteCaveNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Hotel", b =>
                {
                    b.Navigation("HebergementHotelNavigation");
                });

            modelBuilder.Entity("Vinodrill_Back.Models.EntityFramework.Societe", b =>
                {
                    b.Navigation("ActiviteSocieteNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
